#!/bin/bash
set -eo pipefail
source ./bt.cfg
function cleanX () {
  rm -f rt.o x.o x-dbg x-raw x
}
function cleanLibtest () {
  rm -f lib_test
}
function cleanLibauklet () {
  rm -f rt.o libauklet.a libauklet.tgz
}
function rtCompile () {
case "$1" in
  ${CC} -o rt.o -c ${CFLAGS} -DAUKLET_VERSION="\"$(cat VERSION)\"" -DAUKLET_TIMESTAMP="\"${TIMESTAMP}\"" rt.c
  clean)
}
case "$1" in
  clean)
    cleanX
    cleanLibtest
    cleanLibauklet
    ;;
  test)
    echo 'bt: running unit tests...'
    cleanLibtest
    ${CC} -o lib_test ${CFLAGS} -g -lpthread lib_test.c lib.c
    ./lib_test
    ;;
  x)
    echo 'bt: generating X test executable...'
    cleanX
    # uninstrumented test program
    ${CC} -o x-raw x.c ${CFLAGS} -lpthread
    # instrumented, debuggable test program
    rtCompile
    ${CC} -o x.o -c ${CFLAGS} ${PFLAGS} x.c
    ${CC} -o x-dbg x.o rt.o ${PLIBS}
    # instrumented, stripped test program
    cp x-dbg x
    strip x
    ;;
  lib)
    echo 'bt: compiling libauklet...'
    cleanLibauklet
    rtCompile
    ${AR} rcs libauklet.a rt.o
    ;;
  libinstall)
    ./$0 lib
    echo 'bt: installing libauklet...'
    sudo cp libauklet.a ${INSTALL}/libauklet.a
    ;;
  libuninstall)
    echo 'bt: uninstalling libauklet...'
    sudo rm -f ${INSTALL}/libauklet.a
    ;;
  libpkg)
    ./$0 lib
    echo 'bt: packaging libauklet...'
    tar cz -f ${TARNAME} libauklet.a
    ;;
  *)
    echo 'Usage: $0 [ clean | test | x | lib | libinstall | libuninstall | libpkg ]'
    exit 1
    ;;
esac
echo 'bt: done.'
