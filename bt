#!/bin/bash
set -eo pipefail
source ./bt.cfg
function cleanX () {
  rm -f rt.o x.o x-dbg x-raw x
}
function cleanLibtest () {
  rm -f lib_test
}
function cleanLibauklet () {
  rm -f rt.o libauklet.a libauklet.tgz
}
function rtCompile () {
  ${CC} -o rt.o -c ${CFLAGS} -DAUKLET_VERSION="$(cat VERSION)" -DAUKLET_TIMESTAMP="${TIMESTAMP}" rt.c lib.c
}
if [ "$1" == "" ]; then
  ./$0 gobin
  ./$0 test
  ./$0 x
else
  case "$1" in
    clean)
      cleanX
      cleanLibtest
      cleanLibauklet
      ;;
    gobin)
      echo 'bt: installing wrapper and releaser...'
      go install ./wrap ./release
      ;;
    test)
      echo 'bt: running unit tests...'
      go test ./wrap
      cleanLibtest
      ${CC} -o lib_test ${CFLAGS} -g -lpthread lib_test.c lib.c
      ./lib_test
      ;;
    x)
      echo 'bt: generating X test executable...'
      cleanX
      # uninstrumented test program
      ${CC} -o x-raw ${CFLAGS} -lpthread x.c
      # instrumented, debuggable test program
      rtCompile
      ${CC} -o x.o -c ${CFLAGS} ${PFLAGS} x.c
      ${CC} -o x-dbg ${PLIBS} x.o rt.o
      # instrumented, stripped test program
      cp x-dbg x
      strip x
      ;;
    lib)
      echo 'bt: compiling libauklet...'
      cleanLibauklet
      rtCompile
      ${AR} rcs libauklet.a rt.o
      ;;
    libinstall)
      ./$0 lib
      echo 'bt: installing libauklet...'
      sudo cp libauklet.a ${INSTALL}/libauklet.a
      ;;
    libuninstall)
      echo 'bt: uninstalling libauklet...'
      sudo rm -f ${INSTALL}/libauklet.a
      ;;
    libpkg)
      ./$0 lib
      echo 'bt: packaging libauklet...'
      tar cz -f ${TARNAME} libauklet.a
      ;;
    *)
      echo 'Usage: $0 [ clean | gobin | test | x | lib | libinstall | libuninstall | libpkg ]'
      exit 1
      ;;
  esac
fi
echo 'bt: done.'
