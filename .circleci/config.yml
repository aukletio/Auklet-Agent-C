version: 2

jobs:
    build:
        environment:
            TZ: "/usr/share/zoneinfo/America/Detroit"
        working_directory: ~/go/src/github.com/ESG-USA/Auklet-Profiler-C
        docker:
            - image: circleci/ruby:2.2.7-node-browsers
        steps:

            ##
            # SETUP
            ##
            - add_ssh_keys
            - checkout
            - run:
                name: Prepare OS
                command: |
                  echo 'Installing jq...'
                  sudo apt-get update
                  sudo apt-get -y install jq
                  echo 'Installing Go...'
                  curl -sSL https://redirector.gvt1.com/edgedl/go/go1.8.5.linux-amd64.tar.gz | tar xzf -
                  sudo chown -R circleci:circleci ./go
                  sudo mv go /usr/local
                  echo 'export GOPATH=$(cd ; pwd)/go' >> $BASH_ENV
                  echo 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin' >> $BASH_ENV
            - run:
                name: Calculate codebase version
                command: |
                  git config --global user.email "$ESGBOT_GIT_EMAIL" && git config --global user.name "$ESGBOT_GIT_NAME"
                  bash .devops/calculate-app-version.sh
                  cp ~/.version VERSION

            ##
            # TESTS
            ##
            - run:
                name: Download Go dependencies
                command: |
                  go get -t -d -v ./...
            - run:
                name: Run tests
                command: |
                  make lib_test && ./lib_test
            - run:
                name: Debug deployment
                command: |
                  bash .devops/deploy.sh staging

            ##
            # DEPLOYMENT
            ##
            - run:
                name: Deploy Edge (If staging)
                command: |
                  set -ou pipefail
                  if [ "${CIRCLE_BRANCH}" == "edge" ]; then
                    bash .devops/deploy.sh staging
                  fi
            - run:
                name: Deploy QA (If master)
                command: |
                  set -ou pipefail
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    bash .devops/deploy.sh qa
                    bash .devops/post-release.sh
                  fi
            - run:
                name: Deploy Production (If production)
                command: |
                  set -ou pipefail
                  if [ "${CIRCLE_BRANCH}" == "production" ]; then
                    bash .devops/deploy.sh production
                    bash .devops/post-release.sh
                  fi
